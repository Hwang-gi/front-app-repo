name: EKS CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  Log-In-To-AWS-ECR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: echo "VERSION=v1.0" >> $GITHUB_ENV
 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create ECR repository
        run: |
          aws ecr create-repository --repository-name gitecr || echo "Repository already exists"

      - name: Log in to Amazon ECR
        id: ecr-login
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com


  Build-and-Push-Images:
    runs-on: ubuntu-latest
    needs: Log-In-To-AWS-ECR

    steps:
    - name: Build and push NGINX images
      run: |
        for service in index main signup login order reservation reservationinfo; do
          # Docker 이미지를 빌드
          docker build -t ${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }} -f ./front-app-repo/eks-app/nginx/$service/Dockerfile ./front-app-repo/eks-app/nginx/$service
          
          # 이미지를 ECR에 태그
          docker tag ${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }}
          
          # 이미지를 ECR에 푸시
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }}
        done

    - name: Build and push NGINX images
      run: |
        for service in index main signup login order reservation reservationinfo; do
          # Docker 이미지를 빌드
          docker build -t ${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }} -f ./front-app-repo/eks-app/Tomcat/$service/Dockerfile ./front-app-repo/eks-app/Tomcat/$service
          
          # 이미지를 ECR에 태그
          docker tag ${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }}
          
          # 이미지를 ECR에 푸시
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }}
        done
