name: EKS CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: echo "VERSION=v1.0" >> $GITHUB_ENV
 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create ECR repository
        run: |
          aws ecr create-repository --repository-name gitecr || echo "Repository already exists"

      - name: Log in to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username awsgichang --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

  push-images:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job

    steps:
      - name: Build and push NGINX images
        run: |
          for service in index main signup login order reservation reservationinfo; do
            docker build -t ${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }} -f ./k8s-manifest-repo-main/eks-app/nginx/$service/Dockerfile ./k8s-manifest-repo-main/eks-app/nginx/$service
            docker tag ${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/nginx-$service:latest
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/nginx-$service:${{ env.VERSION }}
          done

      - name: Build and push Tomcat images
        run: |
          for service in index main signup login order reservation reservationinfo; do
            docker build -t ${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }} -f ./k8s-manifest-repo-main/eks-app/tomcat/$service/Dockerfile ./k8s-manifest-repo-main/eks-app/tomcat/$service
            docker tag ${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }}
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR }}/tomcat-$service:${{ env.VERSION }}
          done
